<tool id="fasttree_boot_oneclick" name="FastTree+Bootstrap Oneclick" version="2.1.9">
    <description>FastTree + Boostrap -> Infers approximately-maximum-likelihood phylogenetic trees from
        alignments of nucleotide or protein sequences.
    </description>
    <edam_operations>
        <edam_operation>operation_0540</edam_operation>
        <edam_operation>operation_0324</edam_operation>
    </edam_operations>
    <requirements>
        <requirement type="package" version="2.1.9">FastaTree</requirement>
        <requirement type="package" version="0.2.4">gotree</requirement>
        <requirement type="package" version="0.2.3">goalign</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" level="fatal" description="Error occurred. Please check Tool Standard Error" />
        <exit_code range=":-1" level="fatal" description="Error occurred. Please check Tool Standard Error" />
    </stdio>
    <command><![CDATA[
                        ######## 1st Fasttree #######

                        FastTree

                        #if $sequence_type.seqtype == 'cfg' :
                            ## Automatic sequence detection
                            ## read an info file to choose which option set
                            #set $info = open( str($input_info) ).read()
                            #if 'dna' in $info:
                                -nt
                                -gtr
                            #else if 'protein' in $info :
                                -lg
                            #end if

                        #else if $sequence_type.seqtype=='-nt':
                            $sequence_type.seqtype
                            $sequence_type.modeldna

                        #else:
                            $sequence_type.modelprot

                        #end if
                        $gamma
                        -log $log < $input > ref_tree.tmp;

                        ####### Bootstrap #######
                        #if $support_condition.support=="boot" and $support_condition.nboot>0 :

                            goalign reformat phylip -i $input | goalign build seqboot -n $support_condition.nboot --gz -o boot_aligns -S;
                            gunzip -c boot_aligns* > all_boot_aligns

                            ####### 2nd Fasttree #######
                            FastTree
                                    -n $support_condition.nboot

                                    #if 'dna' in $info:
                                        -nt
                                        -gtr
                                    #else if 'protein' in $info :
                                        -lg
                                    #else
                                        $sequence_type.seqtype
                                        #if $sequence_type.seqtype=='-nt'
                                            $sequence_type.modeldna
                                        #else:
                                            $sequence_type.modelprot
                                        #end if
                                    #end if
                                    $gamma
                                    -log fasttree_bootlog < all_boot_aligns > boot_trees.tmp ;

                            cat fasttree_bootlog >> $log;


                            ###### booster #######
                            gotree compute support booster
                                    -i ref_tree.tmp
                                    -b boot_trees.tmp
                                    -o tbe_norm_tree.nhx
                                    --out-raw tbe_raw_tree.nhx
                                    -l tbe_log.txt
                                    -t \${GALAXY_SLOTS}
                                    --moved-taxa --highest-per-branches
                                    --dist-cutoff 0.3
                                    --silent;

                            ###### Classical ######
                            gotree compute support classical
                                    -i ref_tree.tmp
                                    -b boot_trees.tmp
                                    -o $output_tree
                                    -t \${GALAXY_SLOTS}
                                    --silent;
                        #else
                            mv ref_tree.tmp $output_tree
                        #end if

    ]]>
    </command>
    <inputs>
        <param name="input" type="data" format="fasta" label="Aligned sequences file (FASTA format)"/>
        <conditional name="sequence_type">
            <param name="seqtype" type="select" label="Nucleotide or protein alignment"
                   help="Specify if the aligned sequences are nucleotide or protein sequences">
                <option value="-nt" selected="true">Nucleotide</option>
                <option value="">Protein</option>
                <option value="cfg">Type information file</option>
            </param>
        <when value="">
            <param name="modelprot" type="select" label="Select the Protein model">
                    <option value="-lg" selected="true">LG</option>
                    <option value="-wag">WAG</option>
                    <option value="">JTT</option>
            </param>
        </when>
        <when value="-nt">
            <param name="modeldna" type="select" label="Select the DNA model">
                <option value="-gtr" selected="true" >GTR</option>
                <option value="">JC</option>
            </param>
        </when>
        <when value="cfg">
             <param name="input_info" format="txt" type="data" multiple="false" label="Information file"
                    help="Precompute file containning sequence description (dna or protein)"/>
        </when>
        </conditional>
        <param name="gamma" type="select" label="Use Gamma distribution"
               help="Non-uniformity of evolutionary rates among sites may be modeled by using a discrete Gamma distribution">
            <option value="-gamma">Yes</option>
            <option value="">No</option>
        </param>
        <conditional name="support_condition">
            <param type="select" name="support" label="Branch support" help="Compute branch support">
                <option value="no">No branch support</option>
                <option value="boot">Bootstrap</option>
            </param>
            <when value="boot">
                <param type="integer" name="nboot" min="1" value="1000" label="Number of bootstrap replicates"
                       help="Must be a positive integer"/>
            </when>
            <when value="no"/>
        </conditional>
    </inputs>
    <outputs>
        <data name="tbe_log" format="txt" label="Booster: tbe_log.txt"
             from_work_dir="tbe_log.txt">
            <filter>support_condition['support'] == "boot"</filter>
        </data>
        <data name="tbe_raw_tree" format="nhx"
              label="Booster: Tree with [id|avg transfer distances|depth] as branch labels: tbe_norm_tree_raw.nhx"
              from_work_dir="tbe_raw_tree.nhx">
            <filter>support_condition['support'] == "boot"</filter>
        </data>
        <data name="tbe_norm_tree" format="nhx" label="Booster: Tree with normalized supports: tbe_norm_tree.nhx"
              from_work_dir="tbe_norm_tree.nhx">
            <filter>support_condition['support'] == "boot"</filter>
        </data>
        <data name="log" format="txt" label="${tool.name} on ${on_string}: FastTree_log.txt"/>
        <data name="output_tree" format="nhx" label="FastTree newick tree: ${input.name}.nhx"/>
    </outputs>
    <tests>
        <test>
            <param name="input" value="aligned.fasta"/>
            <param name="seqtype" value="-nt"/>
            <output name="output_tree" file="tree.nhx" ftype="nhx" lines_diff="10"/>
            <output name="log" file="log.txt" ftype="txt" lines_diff="10"/>
        </test>
    </tests>
    <help><![CDATA[

  .. class:: infomark

FastTree_ infers approximately-maximum-likelihood phylogenetic trees from alignments of nucleotide or protein
sequences. FastTree can handle alignments with up to a million of sequences in a reasonable amount of time and
memory. For large alignments, FastTree is 100-1,000 times faster than PhyML 3.0 or RAxML 7. FastTree is
open-source software.

.. _FastTree: http://meta.microbesonline.org/fasttree

-----

-----
Input
-----

A) Aligned sequences file in FASTA or Phylip format.

----------
Parameters
----------

- Nucleotide or protein alignment
  To specify the type of sequence alignment (nucleotide or protein) you are providing.

- Evolutionary Model according to sequences type

- Use a discrete Gamma distribution


-------
Outputs
-------

This tool produces two output files  newick tree and logfile.

.. class:: infomark

You can view the hidden output by clicking on the cog wheel next to the History panel and select "Include Hidden
Dataset".

(A) The phylogenetic tree in Newick_ format (nhx).

.. class:: infomark

The placement of the root is not biologically meaningful. The local support values are given as names for the
internal nodes, and range from 0 to 1, not from 0 to 100 or 0 to 1,000. If all sequences are unique, then the
tree will be fully resolved (the root will have three children and other internal nodes will have two children).
If there are multiple sequences that are identical to each other, then there will be a multifurcation. Also,
there are no support values for the parent nodes of redundant sequences.

(B) *(hidden)* The log file, containing information of the FastTree run to build the phylogenetic tree.


.. _Newick: http://en.wikipedia.org/wiki/Newick_format

-----


=========
Resources
=========

FastTree_v2.1.9_

.. _FastTree_v2.1.9: http://meta.microbesonline.org/fasttree/#Install


##########################
BOOSTER Bootstrap Supports
##########################

Three files are generated:

1) "support" : Reference tree with branches labelled using normalized supports (1-avgdist/(p-1)), (p) being the number of taxa on the light side of the branch.
2) "avgdist (raw)" : Reference tree with branches labelled as "branch id|average transfer distance|p" (only if algorithm=="booster")
3) "bootstraplog.log": Booster log file with the following informations if algorithm=="booster":
    a) Global transfer score per taxa (2 columns: taxon\ttransferscore),
    b) Most transferred taxa per branch (4 columns: Branch Id\tp\tAverage distance\tsemicolumn separated list of most transfered taxa with their respective transfer index)

]]>
    </help>
    <citations>
        <citation type="doi">10.1093/sysbio/syq010</citation>
        <citation type="doi">10.1093/nar/gki352</citation>
        <citation type="doi">10.1080/10635150390235520</citation>
    </citations>
</tool>

