<tool id="phyml1" name="PhyML" version="3.1">
	<description>maximum likelihood-based inference of phylogenetic trees</description>
	<command interpreter="bash">./phyml.sh $input $output_tree $output_stats $output_stdout 
#if $support_condition.support == "boot": 
 $output_boot_tree $output_boot_stats -b $support_condition.boot_number
#end if
-i $input -d $datatype_condition.type  -v $prop_invar -m $datatype_condition.model  -s $random_condition.search -f $equiSeq
#if $inpuTree.inputtree == "true" :
 -u $inpuTree.userInpuTree
#end if
#if $datatype_condition.type == "nt": 
 -t $datatype_condition.tstv
#end if
#if $gamma_condition.gamma == "true": 
 -c $gamma_condition.categories -a $gamma_condition.shape 
#else: 
 -c 1
#end if
#if $support_condition.support == "sh": 
 -b -4
#end if
#if $support_condition.support == "aBayes": 
 -b -5
#end if
#if $support_condition.support == "no": 
 -b 0
#end if
#if $random_condition.search == "SPR": 
 --rand_start 0 --n_rand_starts $random_condition.points
#end if
#if $random_condition.search == "BEST": 
 --rand_start 0 --n_rand_starts $random_condition.points
#end if
 --no_memory_check
    </command>
	<inputs>
		<param format="txt" name="input" type="data" label="Alignment file" help="phylip format"/>
		<conditional name="inpuTree">
			<param name="inputtree" type="select" label="Use input tree">
				<option value="false">No</option>
				<option value="true">Yes</option>
			</param>
			<when value="true">
				<param name="userInpuTree" type="data" label="Tree file" help="newick format"/>
			</when>
			<when value="false"/>
		</conditional>
		<conditional name="datatype_condition">
			<param type="select" name="type" label="Data type">
				<option value="nt">Nucleic acids</option>
				<option value="aa">Amino acids</option>
			</param>   		
			<when value="nt">
				<param type="select" name="model" label="Substitution model">
					<option value="HKY85">HKY85</option>
					<option value="JC69">JC69</option>
					<option value="K80">K80</option>
					<option value="F81">F81</option>
					<option value="F84">F84</option>
					<option value="TN93">TN93</option>
					<option value="GTR">GTR</option>
				</param>
				<param type="text" name="tstv" help="Must be a positive integer, 'e' if you want PhyML to estimate it" value="e" label="Transition/transversion ratio" />
			</when>
			<when value="aa">
				<param type="select" name="model" label="Evolution model">
					<option value="LG">LG</option>
					<option value="WAG">WAG</option>
					<option value="JTT">JTT</option>
					<option value="MtREV">MtREV</option>
					<option value="Dayhoff">Dayhoff</option>
					<option value="DCMut">DCMut</option>
					<option value="RtREV">RtREV</option>
					<option value="CpREV">CpREV</option>
					<option value="VT">VT</option>
					<option value="Blosum62">Blosum62</option>
					<option value="MtMam">MtMam</option>
					<option value="MtArt">MtArt</option>
					<option value="HIVw">HIVw</option>
					<option value="HIVb">HIVb</option>
				</param>           	
			</when>
   		</conditional>
		<param name="equiSeq" type="select" label="Equilibrium frequencies" help="Empirical: frequencies are estimated by counting the occurences in the alignment. ML/Model: frequencies are estimated using ML for nucleotides or defined by the proteic substitution model.">
			<option value="e">Empirical</option>
			<option value="m">ML/Model</option>
		</param>
   		<conditional name="gamma_condition">
   			<param type="boolean" name="gamma" label="Discrete gamma model" checked="true"/>
			<when value="true">
				<param type="text" name="categories" help="1 means no gamma model" value="4" label="Number of categories for the discrete gamma model" />
				<param type="text" name="shape" help="'e' if you want PhyML to estimate it" value="e" label="Shape parameter of the gamma model" />
			</when>
			<when value="false">
			</when>
		</conditional>
		<param type="text" name="prop_invar" help="0.0 to ignore this parameter, 'e' if you want PhyML to estimate it" value="0.0" label="Proportion of invariant sites" />tree
		<conditional name="random_condition">
			<param type="select" name="search" label="Tree searching">
				<option value="NNI">NNI (Nearest Neighbor Interchange)</option>
				<option value="SPR">SPR (Subtree Pruning and Regraphing)</option>
				<option value="BEST">Best of NNI and SPR</option>
			</param>
   		 
			<when value="SPR">
				<param type="text" name="points" help="Must be an integer" value="0" label="Number of random starting points" />
			</when>
			<when value="BEST">
				<param type="text" name="points" help="Must be an integer" value="0" label="Number of random starting points" />
			</when>
			<when value="NNI">
			</when>
		</conditional>
   		<conditional name="support_condition">
   			<param type="select" name="support" label="Branch support">
				<option value="sh">SH-like aLRT</option>
				<option value="aBayes">aBayes</option>
				<option value="boot">Bootstrap</option>
				<option value="no">No branch support</option>
			</param>  
			<when value="sh">
			</when>
			<when value="aBayes">
			</when>
			<when value="boot">
				<param type="text" name="boot_number" help="Must be a positive integer" value="100" label="Number of bootstrap replicates" />
			</when>
			<when value="no">
			</when>
		</conditional>		
	</inputs>
	<outputs>
		<data format="nhx" name="output_tree" label="PhyML Newick tree"/>
		<data format="txt" name="output_stats" label="PhyML Statistics"/>
		<data format="txt" name="output_stdout" label="PhyML Stdout"/>
		<data format="txt" name="output_boot_tree" label="PhyML Newick Bootstraps trees">
			<filter>support_condition['support'] == "boot"</filter>
		</data>
		<data format="txt" name="output_boot_stats" label="PhyML Bootstraps statistics">
			 <filter>support_condition['support'] == "boot"</filter>
		</data>
	</outputs>
	<help>

.. class:: infomark

**Program encapsulated in Galaxy by Southgreen**
**Encapsulation improved by ATGC (C. Vernette, V. Lefort)**

.. class:: infomark

**PhyML version 3.1, 2010**

-----

==============
 Please cite: 
==============

"New algorithms and methods to estimate maximum-likelihood phylogenies_: assessing the performance of PhyML 3.0"


.. _phylogenies: http://sysbio.oxfordjournals.org/content/59/3/307.long

**Guindon S., Dufayard JF., Anisimova M., Hordijk W., Lefort V., Gascuel O.**

Systematic Biology 2010 59(3):307-321; doi:10.1093/sysbio/syq010. 


"A simple, fast, and accurate algorithm to estimate large phylogenies by maximum likelihood_."


.. _likelihood: http://sysbio.oxfordjournals.org/content/52/5/696.full.pdf+html 

**Guindon S., Gascuel O.**

Systematic Biology, 52(5):696-704, 2003.

-----

===========
 Overview:
===========

PhyML is a phylogeny software based on the maximum-likelihood principle. Early PhyML versions used a fast algorithm to perform Nearest Neighbor Interchanges (NNIs), in order to improve a reasonable starting tree topology. Since the original publication (Guindon and Gascuel 2003), PhyML has been widely used due to its simplicity and a fair accuracy/speed compromise. In the mean time research around PhyML has continued. 

We designed an efficient algorithm to search the tree space using Subtree Pruning and Regrafting (SPR) topological moves (Hordijk and Gascuel 2005), and proposed a fast branch test based on an approximate likelihood ratio test (Anisimova and Gascuel 2006). However, these novelties were not included in the official version of PhyML, and we found that improvements were still needed in order to make them effective in some practical cases. PhyML 3.0 achieves this task. 

It implements new algorithms to search the space of tree topologies with user-defined intensity. A non-parametric, Shimodaira-Hasegawa-like branch test is also available. The program provides a number of new evolutionary models and its interface was entirely re-designed. We tested PhyML 3.0 on a large collection of real data sets to ensure that the new version is stable, ready-to-use and still reasonably fast and accurate. 

-----

For further informations, please visite the PhyML_ website.


.. _PhyML: http://www.atgc-montpellier.fr/phyml/
	</help>

</tool>
